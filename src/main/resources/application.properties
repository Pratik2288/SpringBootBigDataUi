
#The data source properties starting with spring.datasource.* will automatically be read by Spring boot JPA. To change the Hibernate properties we will use prefix spring.jpa.properties.* with Hibernate property name. On the basis of given data source URL, Spring boot can automatically identify data source driver class. So we need not to configure diver class. 
#Find the properties to configure JpaBaseConfiguration and HibernateJpaAutoConfiguration in application.properties. 
#spring.data.jpa.repositories.enabled: It enables JPA repositories. The default value is true. 
#spring.jpa.database: It targets database to operate on. By default embedded database is auto-detected. 
#spring.jpa.database-platform: It is used to provide the name of database to operate on. By default it is auto- detected. 
#spring.jpa.generate-ddl: It is used to initialize schema on startup. By default the value is false. 
#spring.jpa.hibernate.ddl-auto: It is DDL mode used for embedded database. Default value is create-drop. 
#spring.jpa.hibernate.naming.implicit-strategy: It is Hibernate 5 implicit naming strategy fully qualified name. 
#spring.jpa.hibernate.naming.physical-strategy: It is Hibernate 5 physical naming strategy fully qualified name. 
#spring.jpa.hibernate.use-new-id-generator-mappings: It is used for Hibernate IdentifierGenerator for AUTO, TABLE and SEQUENCE. 
#spring.jpa.open-in-view: The default value is true. It binds a JPA EntityManager to the thread for the entire processing of the request. 
#spring.jpa.properties.*: It sets additional native properties to set on the JPA provider. 
#spring.jpa.show-sql: It enables logging of SQL statements. Default value is false.

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:mysql://localhost:3306/notes_app?useSSL=false
spring.datasource.url = jdbc:mysql://localhost:3306/prodone?useSSL=false
spring.datasource.username = root
spring.datasource.password = root

spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15



## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#spring.jpa.properties.hibernate.id.new_generator_mappings = false
#spring.jpa.properties.hibernate.format_sql = true

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create
spring.jpa.show-sql= true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 